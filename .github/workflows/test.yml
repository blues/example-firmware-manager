name: Unit Tests

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]
      fail-fast: false  # Continue testing other versions if one fails
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install coverage for testing
        pip install coverage
        # Install any other dependencies if they exist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run unit tests with coverage
      run: |
        python run_tests.py --coverage
    
    - name: Check test results
      run: |
        if [ $? -eq 0 ]; then
          echo "✅ All tests passed!"
        else
          echo "❌ Tests failed!"
          exit 1
        fi
    
    - name: Generate coverage summary (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        # Extract coverage percentage
        COVERAGE=$(python -c "
        try:
            import coverage
            cov = coverage.Coverage()
            cov.load()
            total = cov.report(show_missing=False)
            print(f'{total:.0f}')
        except:
            print('0')
        ")
        echo "COVERAGE_PERCENTAGE=${COVERAGE}" >> $GITHUB_ENV
        echo "📊 Coverage: ${COVERAGE}%"
        
        # Create coverage badge color
        if [ "$COVERAGE" -ge 90 ]; then
          echo "COVERAGE_COLOR=brightgreen" >> $GITHUB_ENV
        elif [ "$COVERAGE" -ge 75 ]; then
          echo "COVERAGE_COLOR=yellow" >> $GITHUB_ENV  
        else
          echo "COVERAGE_COLOR=red" >> $GITHUB_ENV
        fi
    
    - name: Upload coverage to Codecov (Python 3.11 only)
      if: matrix.python-version == '3.11' && always()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
        name: firmware-manager-coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Archive coverage artifacts (Python 3.11 only)
      if: matrix.python-version == '3.11' && always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.run_number }}
        path: |
          coverage.xml
          htmlcov/
        retention-days: 30

  # Summary job for PR status checks
  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: Test Summary
      run: |
        echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Unit tests: PASSED" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code coverage: Generated" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Multi-Python version testing: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Tests failed!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the test output above for details." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Test Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Python versions**: 3.8, 3.9, 3.10, 3.11, 3.12" >> $GITHUB_STEP_SUMMARY
        echo "- **Test framework**: unittest" >> $GITHUB_STEP_SUMMARY  
        echo "- **Coverage tool**: coverage.py" >> $GITHUB_STEP_SUMMARY
        echo "- **Test runner**: run_tests.py --coverage" >> $GITHUB_STEP_SUMMARY